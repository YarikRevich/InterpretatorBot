package main

import (
	"github.com/Syfaro/telegram-bot-api"
	"log"
	"os"
	"Bot/States"
	"Bot/BotUtils"
	"Bot/Utils"
	"Bot/Parcer"
)


const (
	SiteWithExpl string = "http://sum.in.ua/?swrd="
)

var states = States.States{
	Wait: false, 
	Question: false}

var info = States.Info{
	Trials: 0,
	WordsToIgnore: []string{"üåê–†–æ–∑–ø–æ—á–∞—Ç–∏ –ø–æ—à—É–∫"}}


func main(){

	// –∏—Å–ø–æ–ª—å–∑—É—è —Ç–æ–∫–µ–Ω —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∏–Ω—Å—Ç–∞–Ω—Å –±–æ—Ç–∞
	Bot, err := tgbotapi.NewBotAPI(os.Getenv("TOKEN"))
	if err != nil {
		log.Panic(err)
	}
	
	// u - —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å –∫–æ–Ω—Ñ–∏–≥–æ–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–ø–¥–µ–π—Ç–æ–≤
	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60

	// –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–Ω—Ñ–∏–≥ u —Å–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –ø—Ä–∏–ª–µ—Ç–∞—Ç—å –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
	updates, err := Bot.GetUpdatesChan(u)

	if err != nil {
		log.Panic(err)
	}

	//Checks all the updates 
	for Update := range updates {

		reply := "üëåüèø–ù–∞—Ç–∏—Å–Ω–∏ –±—É–¥—å-—è–∫—É –∫–Ω–æ–ø–∫—É –¥–ª—è —Ç–æ–≥–æ, —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏ —Ä–æ–∑–º–æ–≤—É"
		keyboard := BotUtils.CreateKeyBoardHi(Bot, Update, []string{""})

		if Update.Message == nil {
			continue
		}

		//Checks whether answer mode is not active if it does it sends welcome message and states mode active
		if states.Wait != true{
			switch Update.Message.Text{
			case "üåê–†–æ–∑–ø–æ—á–∞—Ç–∏ –ø–æ—à—É–∫":
				reply = "üñä–í–≤–µ–¥—ñ—Ç—å —Å–ª–æ–≤–æ –¥–ª—è —Ç–ª—É–º–∞—á–µ–Ω–Ω—è"
				states.Wait = true
			}
		}else{
			//Checks whether user hasn't made more than 3 trials if he does it sends warning message
			if info.Trials <= 3{
				//If sent message is in exception list it sends equal message
				if Utils.CheckWordExistance(Update.Message.Text, info.WordsToIgnore){
					states.Wait = false
					reply = "‚ö†Ô∏è–í–∏ –ø—Ä–∏–∑—É–ø–∏–Ω–∏–ª–∏ –ø–æ—à—É–∫ —Ç–ª—É–º–∞—á–µ–Ω—å"
				}else{
					//Gets explanation of the written word and if it's giant it sends special link to check it in browser
					reply = Parcer.GetWordDescription(Update.Message.Text, SiteWithExpl)
					if len(reply) > 4096{
						reply = "‚ùóÔ∏è–¢–ª—É–º–∞—á–µ–Ω–Ω—è –≤–∏—è–≤–∏–ª–æ—Å—è –∑–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–µ.\n–ü–µ—Ä–µ–π–¥–∏ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –Ω–∏–∂—á–µ, —â–æ–± –ø–æ–¥–∏–≤–∏—Ç–∏—Å—è —Ç–ª—É–º–∞—á–µ–Ω–Ω—è\n" + SiteWithExpl + Update.Message.Text 
					}
					info.Trials++	
				}	
			}else{
				reply = "üòì–¢–∏ –∑—Ä–æ–±–∏–≤ –±–∞–≥–∞—Ç–æ —Å–ø—Ä–æ–±, –¥–∞–π –ø–µ—Ä–µ–ø–æ—á–∏–Ω—É—Ç–∏"
				info.Trials = 0
				states.Wait = false
			}
		}

		//Processes comands
		switch Update.Message.Command() {
		case "start":
			states.Wait = false
			reply = "üòõ–ü—Ä–∏–≤—ñ—Ç, —è –±–æ—Ç –¥–ª—è —Ç–ª—É–º–∞—á–µ–Ω–Ω—è —Å–ª—ñ–≤"
			keyboard = BotUtils.CreateKeyBoardHi(Bot, Update, []string{"üåê–†–æ–∑–ø–æ—á–∞—Ç–∏ –ø–æ—à—É–∫"})
		}

		//Sends messages written in the 'reply' variable
		msg := tgbotapi.NewMessage(Update.Message.Chat.ID, reply)
		msg.ReplyMarkup = keyboard
		Bot.Send(msg)
	}
}

